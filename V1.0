// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract Mode {
    mapping(address => bool) private whitelist;
    uint256 private constant totalSupply = 10000000;
    uint256 private constant feePercentage = 5;
    uint256 private totalFees;

    function addToWhitelist(address user) public {
        whitelist[user] = true;
    }

    function removeFromWhitelist(address user) public {
        whitelist[user] = false;
    }

    function isWhitelisted(address user) public view returns (bool) {
        return whitelist[user];
    }

    function transfer(address recipient, uint256 amount) public payable {
        require(amount <= balanceOf(msg.sender), "Insufficient balance");
        require(isWhitelisted(msg.sender), "You are not whitelisted");

        uint256 fee = (amount * feePercentage) / 100;
        uint256 netAmount = amount - fee;

        _transfer(msg.sender, recipient, netAmount);
        totalFees += fee;
    }

    function balanceOf(address account) public view returns (uint256) {
        // return balance of account
    }

    function _transfer(
        address sender,
        address recipient,
        uint256 amount
    ) private {
        // transfer tokens from sender to recipient
    }
}
